{"version":3,"sources":["man.png","toilet.png","Door.tsx","Cleaner.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","OccupySign","props","className","isOccupied","ShitComponent","state","posX","Math","random","posY","sizeX","sizeY","rotation","styles","top","this","left","width","height","transform","style","React","Component","PissDeluge","DelugeComponent","Door","useState","setOccupied","doorActive","setDoorActive","doorAnimClass","setDoorAnimClass","dudeVisible","setDudeVisible","shit","Array","map","e","i","key","filthLevel","backgroundImage","src","ToiletPic","alt","ManPic","onClick","setTimeout","delay","setFilthLevel","index","DoorAnim1c","DoorAnim1b","Cleaner","cleanFunc","App","CleanDoors","setState","doors","SetFilthLevel","doorIndex","level","doorCopy","value","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6009c25e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/man.281f9ef8.png\";","module.exports = __webpack_public_path__ + \"static/media/toilet.ecb0f8d6.png\";","import React, { useState } from \"react\";\nimport ManPic from \"./man.png\";\nimport ToiletPic from \"./toilet.png\";\n\ninterface occupyType {\n  isOccupied: boolean;\n}\n\ninterface doorProp {\n  filthLevel: number;\n  setFilthLevel: setFilthLevelType;\n  index: number;\n}\n\ntype setFilthLevelType = (door: number, level: number) => void;\n\nfunction Door(props: doorProp) {\n  const [isOccupied, setOccupied] = useState(false);\n  const [doorActive, setDoorActive] = useState(true);\n  const [doorAnimClass, setDoorAnimClass] = useState(\"\");\n  const [dudeVisible, setDudeVisible] = useState(false);\n\n  const floorPissStyle = {\n    backgroundImage: \"linear-gradient(#d7cf35, #9ea428)\"\n  };\n\n  const shit = ShitOnWall();\n\n  function TryOccupy() {\n    if (doorActive) {\n      setDoorAnimClass(\"Door-anim\");\n      setDoorActive(false);\n      setTimeout(() => {\n        DoorAnim1();\n      }, 4000);\n      setTimeout(() => {\n        DudeAnim1();\n      }, 1000);\n    }\n  }\n\n  function DoorAnim1() {\n    setTimeout(() => {\n      DoorAnim1b();\n    }, 2000);\n    setDoorAnimClass(\"\");\n    setOccupied(true);\n  }\n\n  function DoorAnim1b() {\n    let delay = 0;\n    if (props.filthLevel === 1) {\n      delay = 1000;\n    }\n    props.setFilthLevel(props.index, props.filthLevel + 1);\n    setTimeout(() => {\n      DoorAnim1c();\n    }, delay);\n  }\n\n  function DoorAnim1c() {\n    let delay = 0;\n    if (props.filthLevel === 2) {\n      delay = 1500;\n    }\n    setTimeout(() => {\n      DoorAnim2();\n    }, delay);\n  }\n\n  function DoorAnim2() {\n    setOccupied(false);\n    setDoorAnimClass(\"Door-anim\");\n    setTimeout(() => {\n      DoorAnim3();\n    }, 4000);\n    setTimeout(() => {\n      DudeAnim2();\n    }, 2000);\n  }\n  function DoorAnim3() {\n    setDoorAnimClass(\"\");\n    setDoorActive(true);\n  }\n\n  function DudeAnim1() {\n    setDudeVisible(true);\n  }\n\n  function DudeAnim2() {\n    setDudeVisible(false);\n  }\n\n  return (\n    <div className=\"Door-wrapper\">\n      <div className=\"DudeBase\">\n        <div className=\"ToiletUpper\"></div>\n        <div\n          className=\"ToiletLower\"\n          style={props.filthLevel > 1 ? floorPissStyle : {}}\n        ></div>\n        {props.filthLevel === 1 ? <div className=\"PissPuddle\"></div> : null}\n        {props.filthLevel > 2 ? shit : null}\n        {props.filthLevel > 1 ? <PissDeluge /> : null}\n        <div className=\"ImageHolder\">\n          <img src={ToiletPic} alt=\"A NICE TOILET!\" />\n        </div>\n        {dudeVisible ? (\n          <div className=\"ImageHolder\">\n            <img src={ManPic} alt=\"HE SURE IS FILTHY!\" />\n          </div>\n        ) : null}\n      </div>\n      <OccupySign isOccupied={isOccupied}></OccupySign>\n      <div className=\"Grid-wrap\">\n        <div className={\"Door-grid \" + doorAnimClass} onClick={TryOccupy}>\n          <div className=\"Door-upper\"></div>\n          <div className=\"Door-knob\"></div>\n          <div className=\"Door-lower\"></div>\n        </div>\n      </div>\n      <div className=\"Door-below\"></div>\n    </div>\n  );\n}\n\nfunction OccupySign(props: occupyType) {\n  return (\n    <div className=\"Occupation-outer\">\n      {props.isOccupied && <div className=\"Occupation-inner-occupied\">OCC</div>}\n\n      {!props.isOccupied && <div className=\"Occupation-inner-vacant\">FREE</div>}\n    </div>\n  );\n}\n\nfunction ShitOnWall() {\n  return (\n    <div>\n      {[...Array(20)].map((e, i) => (\n        <ShitComponent key={i} />\n      ))}\n    </div>\n  );\n}\n\nclass ShitComponent extends React.Component<{}> {\n  state: Readonly<data> = {\n    posX: 20 + Math.random() * 250,\n    posY: 20 + Math.random() * 400,\n    sizeX: 5 + Math.random() * 10,\n    sizeY: 15 + Math.random() * 40,\n    rotation: Math.random() * 360\n  };\n  render() {\n    const styles = {\n      top: this.state.posY + \"px\",\n      left: this.state.posX + \"px\",\n      width: this.state.sizeX + \"px\",\n      height: this.state.sizeY + \"px\",\n      transform: \"rotateZ(\" + this.state.rotation + \"deg)\"\n    };\n    return <div className=\"ShitStain\" style={styles}></div>;\n  }\n}\n\nfunction PissDeluge() {\n  return (\n    <div>\n      <DelugeComponent></DelugeComponent>\n      <DelugeComponent></DelugeComponent>\n      <DelugeComponent></DelugeComponent>\n    </div>\n  );\n}\n\ninterface data {\n  posX: number;\n  posY: number;\n  sizeX: number;\n  sizeY: number;\n  rotation: number;\n}\n\nclass DelugeComponent extends React.Component<{}> {\n  state: Readonly<data> = {\n    posX: Math.random() * 170,\n    posY: 430 + Math.random() * 50,\n    sizeX: 75 + Math.random() * 100,\n    sizeY: 60 + Math.random() * 100,\n    rotation: -20 + Math.random() * 40\n  };\n  render() {\n    const styles = {\n      top: this.state.posY + \"px\",\n      left: this.state.posX + \"px\",\n      width: this.state.sizeX + \"px\",\n      height: this.state.sizeY + \"px\",\n      transform: \"rotateZ(\" + this.state.rotation + \"deg)\"\n    };\n    return <div className=\"PissPuddle\" style={styles}></div>;\n  }\n}\n\nexport default Door;\n","import React, { useState } from \"react\";\n\ninterface propsType {\n  cleanFunc: Function;\n}\n\nfunction Cleaner(props: propsType) {\n  function cleanCall() {\n    props.cleanFunc();\n  }\n  return (\n    <div className=\"Button-border\">\n      <div className=\"Button-inner\" onClick={cleanCall}>\n        SIIVOA\n      </div>\n    </div>\n  );\n}\n\nexport default Cleaner;\n","import React from \"react\";\nimport \"./App.css\";\nimport Door from \"./Door\";\nimport Cleaner from \"./Cleaner\";\n\ninterface stateType {\n  doors: number[];\n}\n\nclass App extends React.Component<any, stateType> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      doors: [0, 0, 0]\n    };\n  }\n\n  CleanDoors = () => {\n    this.setState({\n      doors: [0, 0, 0]\n    });\n  };\n\n  SetFilthLevel = (doorIndex: number, level: number) => {\n    let doorCopy = this.state.doors;\n    doorCopy[doorIndex] = level;\n    this.setState({ doors: doorCopy });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>VESSAOHJELMA</h1>\n          NAPSAUTA VESSAA KÄYDÄKSESI SIELLÄ\n          <div className=\"all-toilets\">\n            <Cleaner cleanFunc={this.CleanDoors}></Cleaner>\n            {this.state.doors.map((value, index) => {\n              return (\n                <Door\n                  key={index}\n                  index={index}\n                  filthLevel={value}\n                  setFilthLevel={this.SetFilthLevel}\n                />\n              );\n            })}\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}